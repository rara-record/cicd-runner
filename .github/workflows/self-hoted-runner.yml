name: TEST CI/CD ver1

on:
  push:
    branches:
      - self-hosted-runner

env:
  PROJECT_NAME: nextjs-test
  S3_BUCKET_NAME: nextjs-test-v1
  
jobs:  
  build: 
    name: CI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 
      uses: actions/checkout@v2 

    - name: 캐시 복원
      uses: actions/cache@v3
      id: cache-nextjs-restore
      with:
        path: | 
          ${{ github.workspace }}/.next/cache
          ~/.npm
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}- #

    - name: npm 설치
      if: steps.cache-nextjs-restore.outputs.cache-hit != 'true'
      run: npm install # npm ci는 clean 설치여서, 모든 의존성을 새롭게 설치하므로 npm install 로

    - name: Next.js 빌드
      run: npm run build:standalone

    - name: Next.js 캐시 저장
      id: cache-nextjs-save
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}   

    - name: 빌드 결과물 압축
      run: zip -qq -r ./${{ env.PROJECT_NAME }}.zip . -x "node_modules/*"
      shell: bash

    - name: Configure AWS credentials 
      uses: aws-actions/configure-aws-credentials@v1 
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
      
    - name: S3 업로드
      run: |
        aws s3 cp ./${{ env.PROJECT_NAME }}.zip s3://${{ env.S3_BUCKET_NAME }}/${{ env.PROJECT_NAME }}.zip
      shell: bash
        


  deploy:
    needs: build 
    name: CD
    runs-on: [self-hosted, test-runner]
    
    steps:
    - name: test-deploy
      run: echo "test-deploy.."
